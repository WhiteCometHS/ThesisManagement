@using DiplomaManagement.Helpers
@using DiplomaManagement.Interfaces
@using DiplomaManagement.Models
@model IEnumerable<DiplomaManagement.Entities.Thesis>

@inject INotificationService NotificationService

@{
    ViewData["Title"] = @Localizer["theses"];
    var errorMessage = NotificationService.GetNotification($"MaxThesisLimit_{User.Identity.Name}") 
        ?? NotificationService.GetNotification($"DeleteFailure_{User.Identity.Name}") 
        ?? null;
}

<h1>@Localizer["list-of-all-your-theses"]</h1>

@if (!string.IsNullOrEmpty(errorMessage))
{
    var toastModel = new ToastNotificationViewModel
    {
        Title = "Danger",
        Message = errorMessage,
        Class = "bg-danger"
    };

    @section ToastNotification {
        @await Html.PartialAsync("_ToastNotificationPartial", toastModel)
    }
}

<p>
    <a asp-action="Create">@Localizer["create-new-record"]</a>
</p>

@if (Model != null && Model.Any()) 
{
    <table class="table">
        <thead>
            <tr>
                <th>
                    @Localizer["title"]
                </th>
                <th>
                    @Localizer["description"]
                </th>
                <th>
                    @Localizer["uploaded-example"]
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
    @foreach (var item in Model) {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Title)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    @{
                        var firstPdfFile = item.PdfFiles.FirstOrDefault();
                            var truncatedString = firstPdfFile?.FileName.Truncate(20);
                    }
                    @truncatedString
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id">@Localizer["edit-button"]</a> |
                    <a asp-action="Details" asp-route-id="@item.Id">@Localizer["details-button"]</a> |
                    <a class="btn-delete" style="cursor: pointer;" data-bs-toggle="modal" data-bs-target="#confirmationModal" data-id="@item.Id">@Localizer["delete-button"]</a>
                </td>
            </tr>
    }
        </tbody>
    </table>
}
else 
{
    <div class="alert alert-primary d-flex align-items-center" role="alert">
        <partial name="Icons/_WarningIconPartial" />
        <div>
            @Localizer["no-created-theses"] <a asp-action="Create" class="btn btn-outline-success">@Localizer["create-new-record"]</a>
        </div>
    </div>
}

<!-- Modal -->
<div class="modal fade" id="confirmationModal" tabindex="-1" aria-labelledby="confirmationModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="confirmationModalLabel">@Localizer["confirm-action"]</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                @Localizer["aus-thesis-delete"]
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">@Localizer["cancel"]</button>
                <button type="button" class="btn btn-primary" id="confirmSubmit">@Localizer["submit"]</button>
            </div>
        </div>
    </div>
</div>
<form id="hiddenForm" method="post" style="display:none;"></form>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            var submitButtons = document.querySelectorAll('.btn-delete');
            var confirmButton = document.getElementById('confirmSubmit');
            var currentItemId;

            submitButtons.forEach(function (button) {
                button.addEventListener('click', function () {
                    currentItemId = this.getAttribute('data-id');
                });
            });

            confirmButton.addEventListener('click', function () {
                var form = document.getElementById('hiddenForm');
                form.action = '@Url.Action("Delete", "Thesis")/' + currentItemId;
                form.submit();
            });
        });
    </script>
}
