@using DiplomaManagement.Services
@model IEnumerable<DiplomaManagement.Entities.Thesis>

@inject INotificationService NotificationService

@{
    ViewData["Title"] = "Index";
    var notificationMessage = NotificationService.GetNotification($"MaxThesisLimit_{User.Identity.Name}");
}

<h1>Index</h1>
@if (!string.IsNullOrEmpty(notificationMessage))
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert" id="info-message">
        @notificationMessage
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PresentationFile)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
@*             <td>
                @Html.DisplayFor(modelItem => item.PdfFile.Id)
            </td> *@
            <td>
                @Html.DisplayFor(modelItem => item.PresentationFile.Id)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
@*     <script>
        document.addEventListener('DOMContentLoaded', function () {
            var MessageElement = document.getElementById('info-message');
            if (MessageElement) {
                setTimeout(function () {
                    var alert = new bootstrap.Alert(MessageElement);
                    alert.close();
                }, 5000);
            }
        });
    </script> *@
}
