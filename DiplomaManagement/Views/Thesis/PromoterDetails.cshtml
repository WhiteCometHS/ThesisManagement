@using DiplomaManagement.Entities
@using DiplomaManagement.Services
@using Microsoft.AspNetCore.Antiforgery
@model DiplomaManagement.Models.PromoterThesisViewModel

@inject INotificationService NotificationService
@inject IAntiforgery _antiforgery
@inject IHttpContextAccessor HttpContextAccessor

@{
    ViewData["Title"] = "Details";
    var antiforgeryToken = _antiforgery.GetTokens(HttpContextAccessor.HttpContext).RequestToken;
    //var notificationMessage = NotificationService.GetNotification($"FilesAdded_{User.Identity.Name}");
}

@section Styles {
    <link rel="stylesheet" href="~/css/thesis.css" />
}

<h1>Details</h1>
<svg xmlns="http://www.w3.org/2000/svg" style="display: none;">
<symbol id="check-circle-fill" fill="currentColor" viewBox="0 0 16 16">
    <path d="M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zm-3.97-3.03a.75.75 0 0 0-1.08.022L7.477 9.417 5.384 7.323a.75.75 0 0 0-1.06 1.06L6.97 11.03a.75.75 0 0 0 1.079-.02l3.992-4.99a.75.75 0 0 0-.01-1.05z"/>
  </symbol>
</svg>
<div id="liveAlertPlaceholder"></div>

<div>
    <h4>Thesis</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Title)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Title)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Description)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Description)
        </dd>
    </dl>

    @if (ViewBag.OriginalPdf != null || ViewBag.PresentationFile != null)
    {
        <div class="additional-materials text-center">
            <h2 class="mb-4">Files:</h2>
        </div>

        @if (ViewBag.OriginalPdf != null)
        {
            var pdf = ViewBag.OriginalPdf;
            String statusClass;
            String statusValue;
            switch (pdf.FileStatus)
            {
                case FileStatus.Accepted:
                    statusClass = "table-success";
                    statusValue = "Accepted";
                    break;
                case FileStatus.NotAccepted:
                    statusClass = "table-danger";
                    statusValue = "Not accepted";
                    break;
                default:
                    statusClass = "table-warning";
                    statusValue = "Not verified";
                    break;
            }
            <table class="table table-striped table-bordered">
                <tbody>
                    <tr>
                        <td width="60%">
                            @pdf.FileName
                        </td>
                        <td width="10%">
                            <div class="d-grid">
                                <a asp-action="Download" asp-route-id="@pdf.Id" class="btn btn-primary">Download</a>
                            </div>
                        </td>
                        <td width="30%">
                            <div class="toggle-switch" data-file-id="@pdf.Id">
                                <button type="button" class="btn btn-outline-danger state-off @(pdf.FileStatus == FileStatus.NotAccepted ? "activated-state-off" : "")" data-status="@FileStatus.NotAccepted">Not accepted</button>
                                <button type="button" class="btn btn-outline-warning state-none @(pdf.FileStatus == FileStatus.NotVerified ? "activated-state-none" : "")" data-status="@FileStatus.NotVerified">Not verified</button>
                                <button type="button" class="btn btn-outline-success state-on @(pdf.FileStatus == FileStatus.Accepted ? "activated-state-on" : "")" data-status="@FileStatus.Accepted">Accepted</button>
                            </div>
                        </td>
                    </tr>
                </tbody>
            </table>
        }

        @if (ViewBag.PresentationFile != null)
        {

            PresentationFile presentation = ViewBag.PresentationFile;
            String statusClass;
            String statusValue;
            switch (presentation.FileStatus)
            {
                case FileStatus.Accepted:
                    statusClass = "table-success";
                    statusValue = "Accepted";
                    break;
                case FileStatus.NotAccepted:
                    statusClass = "table-danger";
                    statusValue = "Not accepted";
                    break;
                default:
                    statusClass = "table-warning";
                    statusValue = "Not verified";
                    break;
            }
            <table class="table table-striped table-bordered">
                <tbody>
                    <tr>
                        <td width="60%">
                            @presentation.FileName
                        </td>
                        <td width="10%">
                            <div class="d-grid">
                                <a asp-action="Download" asp-route-id="@presentation.Id" class="btn btn-primary">Download</a>
                            </div>
                        </td>
                        <td width="30%">
                            <div class="toggle-switch" data-file-id="@presentation.Id">
                                <button type="button" class="btn btn-outline-danger state-off @(presentation.FileStatus == FileStatus.NotAccepted ? "activated-state-off" : "")" data-status="@FileStatus.NotAccepted">
                                    Not accepted
                                </button>
                                <button type="button" class="btn btn-outline-warning state-none @(presentation.FileStatus == FileStatus.NotVerified ? "activated-state-none" : "")" data-status="@FileStatus.NotVerified">
                                    Not verified
                                </button>
                                <button type="button" class="btn btn-outline-success state-on @(presentation.FileStatus == FileStatus.Accepted ? "activated-state-on" : "")" data-status="@FileStatus.Accepted">
                                    Accepted
                                </button>
                            </div>
                        </td>
                    </tr>
                </tbody>
            </table>
        }
    }
</div>
<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const token = '@antiforgeryToken';

            const alertPlaceholder = document.getElementById('liveAlertPlaceholder')

            const alert = (message) => {
                const wrapper = document.createElement('div')
                wrapper.innerHTML = [
                    `<div class="alert alert-success d-flex align-items-center alert-dismissible fade show" role="alert" id="info-message">`,
                    `   <svg class="bi flex-shrink-0 me-2" width="24" height="24" role="img" aria-label="Success:"><use xlink:href="#check-circle-fill"/></svg>`,
                    `   <div>${message}</div>`,
                    '   <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>',
                    '</div>'
                ].join('')

                alertPlaceholder.append(wrapper)

                setTimeout(function () { 
                    var alert = new bootstrap.Alert(wrapper);
                    alert.close();
                }, 5000);
            }

            document.querySelectorAll('.toggle-switch button').forEach(button => {
                button.addEventListener('click', function () {
                    const button = this;
                    const toggleSwitch = button.closest('.toggle-switch');
                    const fileId = toggleSwitch.getAttribute('data-file-id');
                    const status = button.getAttribute('data-status');

                    $.ajax({
                        url: '/Thesis/UpdateFileStatus',
                        method: 'POST',
                        data: {
                            __RequestVerificationToken: token,
                            id: fileId,
                            status: status
                        },
                        success: function () {
                            alert("File status updated successfully.");                            

                            $(".toggle-switch button").removeClass("activated-state-off activated-state-none activated-state-on");
                            if (status === "NotAccepted") {
                                $(button).addClass("activated-state-off");
                            } else if (status === "NotVerified") {
                                $(button).addClass("activated-state-none");
                            } else if (status === "Accepted") {
                                $(button).addClass("activated-state-on");
                            }
                        },
                        error: function () {
                            console.error("An error occurred while updating the file status.");
                        }
                    });
                });
            });
        });
    </script>
}
